buildscript {
    ext {
        springBootVersion = '1.0.2.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
}

ext {
    jacksonVersion = '2.3.3'
    jerseyVersion = '2.7'
    commonsLang3Version = '3.1'
    hibernateValidatorVersion = '5.1.0.Final'
    commonBeanUtilsVersion = '1.9.1'
    commonIoVersion = '2.4'

    testNgVersion = '6.8'
    mockitoVersion = '1.9.5'
    hamcrestVersion = '1.3'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
group = 'com.github.hvd617.template'
version = '1.0.0-SNAPSHOT'

configurations {
    // We will use testng and matcher throughout
    all*.exclude group: 'junit'
    all*.exclude group: 'org.hamcrest', module: 'hamcrest-all'

    // We will use log4j through-out.  Spring boot loads logback by default.
    all*.exclude group: 'commons-logging'
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {
    // Logging
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'org.slf4j:jcl-over-slf4j:1.7.5'
    compile 'org.slf4j:jul-to-slf4j:1.7.5'

    // Spring
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}"

    // Jersey support.  Note that we're using jackson-jaxrs-json-provider instead of
    // the documented jersey-media-json-jackson since jersey-media-json-jackson still uses
    // codehaus's jackson 1.x version
    compile "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}"
    compile "org.glassfish.jersey.ext:jersey-spring3:${jerseyVersion}"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"

    // Misc
    compile "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"
    compile "commons-beanutils:commons-beanutils:${commonBeanUtilsVersion}"


    // Testing
    testCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testCompile "org.testng:testng:${testNgVersion}"
    testCompile "commons-io:commons-io:${commonIoVersion}"

    // Jersey client for testing
    testCompile "org.glassfish.jersey.core:jersey-client:${jerseyVersion}"
    testCompile "org.glassfish.jersey.connectors:jersey-apache-connector:${jerseyVersion}"
}

test {
    useTestNG()
    include(["**/*Tests.class", "**/*Test.class"])
    exclude(["**/Abstract*.class", '**/*$*'])
}

springBoot {
    mainClass = 'com.github.hiendo.springboot.config.AppMain'
}